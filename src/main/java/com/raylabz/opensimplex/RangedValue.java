package com.raylabz.opensimplex;

/**
 * A ranged double value - models values that are in a specific range and allows easy shifts to new ranges.
 */
public class RangedValue {

    /**
     * The original range of this value.
     */
    private final Range originalRange;

    /**
     * The original value.
     */
    private final double originalValue;

    /**
     * Instantiates a new ranged value.
     * @param originalRange The original range of this value.
     * @param originalValue The original value.
     */
    public RangedValue(Range originalRange, double originalValue) {
        this.originalRange = originalRange;
        this.originalValue = originalValue;
    }

    /**
     * Retrieves the original range.
     * @return Returns a Range.
     */
    public Range getOriginalRange() {
        return originalRange;
    }

    /**
     * Retrieves the <b>original</b> value.
     * @return Returns the original value.
     */
    public double getValue() {
        return originalValue;
    }

    /**
     * Retrieves the <b>shifted</b> value, given a new range.
     * @param newRange The new range to shift the value to.
     * @return Returns the shifted value.
     */
    public double getValue(final Range newRange) {
        return inRange(originalValue, originalRange, newRange);
    }

    /**
     * Shifts the range of values generated by the OpenSimpleNoise generator to a given range.
     * @param oldValue The value to shift.
     * @param oldRange The old range to shift the value from.
     * @param newRange The new range to shift the value to.
     * @return Returns a double number in the new range.
     */
    public static double inRange(final double oldValue, final Range oldRange, final Range newRange) {
        return (((oldValue - oldRange.getMinimumValue()) * (newRange.getMaximumValue() - newRange.getMinimumValue()) / (oldRange.getMaximumValue() - oldRange.getMinimumValue())) + newRange.getMinimumValue());
    }

}

